#!/usr/bin/env sh
###############################################################################
# 0. –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ä–µ–ø–æ –∏ –ª–æ–≥-—Ñ–∞–π–ª—É
###############################################################################
REPO_ROOT=$(git -C "$(dirname "$0")/.." rev-parse --show-toplevel 2>/dev/null || pwd)
LOG_FILE="$REPO_ROOT/.shadow/test-run.log"
mkdir -p "$(dirname "$LOG_FILE")"

###############################################################################
# 1. Detach ‚Äì —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ
###############################################################################
if [ -z "$DETACHED" ]; then
  export DETACHED=1
  echo "üöÄ $(date '+%F %T') start (cfg=$1)" >"$LOG_FILE"
  # setsid + nohup = –ø–æ–ª–Ω–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –æ—Ç TTY; exec –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç stdout –∏ stderr
  exec setsid nohup "$0" "$@" >>"$LOG_FILE" 2>&1 &
  exit 0        # git push –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
fi

###############################################################################
# 2. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
###############################################################################
[ -n "$DEBUG" ] && set -x          # –≤—ã–≤–æ–¥–∏—Ç —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫—É –≤ –ª–æ–≥

###############################################################################
# 3. –†–∞–±–æ—Ç–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ (stdout —É–∂–µ –≤ LOG_FILE)
###############################################################################
CONFIG_FILE="$1"
echo "‚öôÔ∏è  config = $CONFIG_FILE"

command -v dotnet >/dev/null 2>&1 || { echo "‚ùå dotnet not found"; exit 1; }

if [ -f "$CONFIG_FILE" ]; then
  mapfile -t TESTS < <(jq -r '.test_projects_root_absolute_path[]?' "$CONFIG_FILE")
else
  TESTS=()
fi

run_tests () {
  for p in "$@"; do
    echo "üîπ dotnet test $p"
    dotnet test "$p" --no-build --verbosity minimal
    [ $? -ne 0 ] && { echo "‚ùå failed: $p" ; exit 1; }
  done
}

if [ ${#TESTS[@]} -gt 0 ]; then
  run_tests "${TESTS[@]}"
else
  echo "üìÇ cfg empty ‚Äì testing whole solution"
  dotnet test --no-build --verbosity minimal
fi

status=$?
[ $status -eq 0 ] && echo "‚úÖ done" || echo "‚ùå exit $status"
exit $status